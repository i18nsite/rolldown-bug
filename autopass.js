const set_=(e,t)=>(e._=t,e),TEXT=new TextDecoder,utf8d=TEXT.decode.bind(TEXT),varintLen=(e,t)=>{let n=e.length;for(;t<n;)if(!(e[t++]&128))return t;return t},readTag=(e,t)=>{let n=e.length,r=0,i=0,a;for(;t<n;){if(a=e[t],r|=(a&127)<<i,t++,!(a&128))return[r&7,r>>>3,t];if(i+=7,i>28)return}},unpack=e=>{let t=[],n=e.length,a=0,s;for(;a<n&&(s=readTag(e,a),s);){let[n,i,c]=s;a=c;let l,u=a;switch(n){case 0:l=varintLen(e,a);break;case 1:l=a+8;break;case 2:{let[t,n]=decodeVarint32(e,a);u=n,l=n+t;break}case 5:l=a+4;break;default:return t}t.push([i-1,e.subarray(u,l)]),a=l}return t},decodeVarint32=(e,t=0)=>{let n=0,r=0,i;do i=e[t++],n|=(i&127)<<r,r+=7;while(i&128);return[n>>>0,t]};var autopass_default=(e=>{let t=[],n=[],r=new Set;e.forEach((e,i)=>{Array.isArray(e)?(t[i]=[],n[i]=e[0],r.add(i)):(t[i]=e._,n[i]=e)});let i=e=>{let i=structuredClone(t);for(let[t,o]of unpack(e)){let e=n[t];if(e){let n=e(o);r.has(t)?i[t].push(n):i[t]=n}}return i};return i._=t,i})([set_(utf8d,``)]);export{autopass_default as default};