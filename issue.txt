[中文](#chinese2) | [English](#english2)

---

<a id="english2"></a>
## English

I wrote another test `./test3.sh`

The core code of `./test3.js` is as follows:
```
await treeshake(file, [], "_no_manual.js")
await treeshake(file, ["getNum"], "_hasmanual.js")
```

Output:

```
+ ./test3.js

# _no_manual.js

1 55 -> 1853 _no_manual.1.js
2 1853 -> 1421 _no_manual.2.js
3 1421 -> 1229 _no_manual.3.js

# _hasmanual.js

1 55 -> 1853 _hasmanual.1.js
2 1853 -> 1205 _hasmanual.2.js
3 1205 -> 1019 _hasmanual.3.js
```

As you can see, in the first pass of tree shaking, the result is the same regardless of whether `manualPureFunctions` is set.

However, the first tree-shaking pass removes the code comments for `getNum`, which has no side effects. This causes the results of subsequent tree-shaking passes to be different, ending up with `1229` and `1019`.

I would like to ask if there is a parameter to prevent minify from removing comments? This would allow me to avoid manually writing `manualPureFunctions` and at the same time minimize the code size.

Of course, it would be best if multiple tree-shaking passes could be implemented automatically with a built-in logic to not remove code comments during the tree-shaking phase.


---

<a id="chinese2"></a>
## 中文

我又写了一个测试 `./test3.sh`

其中 `./test3.js` 核心代码如下
```
await treeshake(file, [], "_no_manual.js")
await treeshake(file, ["getNum"], "_hasmanual.js")
```

输出:

```
+ ./test3.js

# _no_manual.js

1 55 -> 1853 _no_manual.1.js
2 1853 -> 1421 _no_manual.2.js
3 1421 -> 1229 _no_manual.3.js

# _hasmanual.js

1 55 -> 1853 _hasmanual.1.js
2 1853 -> 1205 _hasmanual.2.js
3 1205 -> 1019 _hasmanual.3.js
```

可以看到,第一遍摇树,不管是否设置`manualPureFunctions`结果都一样

但是第一遍摇树,去掉的`getNum`没有副作用的代码注释; 导致后续摇树, 结果就不一样了, 最终一个是`1229`,一个是`1019`

我想请问, 有没有让minify不要去掉注释的参数? 这样我可以避免手动写`manualPureFunctions`同时让代码最小化

当然, 如果实现自动多次摇树并内置不要在摇树阶段去掉代码注释的逻辑最好
